变量赋值
var=123
var=abc
注意："=" 两边不可有空格

let var++
let var+=1
使用let修改变量值 不用加$符号

也可以使用
var=$[ $var + 1 ]
使用[] 要保证里面空格的使用，变量$符号，可选

双[[]] 一般用于变量或字符的比较

bc是用于数学计算的工具，通过管道形式
例如
echo "obase=10;ibase=10;scale=2;2*3.145"|bc
可以选择输入输出进制，小数点位数

2>&1 = &> 用于将标准输出和标注错误重定向到同一文件

tee命令 通过使用管道方式将输出重定向到文件，若无选项是覆盖形式
通过-a 选项追加内容到文件

Bash从4.0才开始支持关联数组
区别于其他语言的数组，shell数组形式如下
array = (1 2 3 4 5)

获取数组元素个数的方法是
${#array[@]}

获取数组索引（key值）
#{!array[@]}

date 工具的使用
date +%s 输出unix时间戳

a 星期缩写 例如Mon
A 星期全称  Monday

b 月份英文简写 Nov
B 月份全称      November


d 天 带0前缀

y
Y 年份的全简写 

H / I 小时
M     分钟
S     秒

--date / -d 可以根据日期获取规定格式日期

运行shell脚本的时候,增加 -x选项，会打印每一步的执行


read命令使用
read -n 10 var #读取10个字符
read -s var     #不显示字符
read -t 10 var  #10s内输入完成
read -p "prompt"#显示提示语

常用条件测试

-f  是否是文件
-d  是否是目录
-r  是否可读
-w  是否可写
-x  是否可执行
-e  是否存在

-z  是否为空字符串
-n  是否为非空字符穿
-L  是否是链接文件

逻辑条件 可以使用 and ,or 或 -a ,-o
也可以用过test命令 来测试条件


xargs 选项
-d 设置分隔符
-n 设置参数个数
-0 以\0作为分隔符
-I 替换结果 例如cat abc.txt|xargs -I {} rm -f {} 


